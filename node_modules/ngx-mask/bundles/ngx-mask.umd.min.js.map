{"version":3,"sources":["ng://ngx-mask/app/ngx-mask/config.ts","null","ng://ngx-mask/app/ngx-mask/mask.service.ts","ng://ngx-mask/app/ngx-mask/mask.directive.ts","ng://ngx-mask/app/ngx-mask/ngx-mask.module.ts"],"names":["config","InjectionToken","NEW_CONFIG","INITIAL_CONFIG","initialConfig","clearIfNotMatch","dropSpecialCharacters","specialCharacters","patterns","0","pattern","RegExp","9","optional","A","S","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","__generator","thisArg","body","f","y","g","_","label","sent","trys","ops","next","verb","throw","return","Symbol","iterator","this","v","op","TypeError","done","value","pop","push","e","step","document","_config","_elementRef","_renderer","_shift","Set","maskSpecialCharacters","maskAvailablePatterns","_formElement","nativeElement","MaskService","applyMask","inputValue","maskExpression","position","cb","undefined","cursor","result","inputArray","toString","split","multi","inputSymbol","_checkSymbolMask","indexOf","add","shift","newPosition","has","Array","isArray","onChange","_removeMask","applyValueChanges","maskedInput","activeElement","clearIfNotMatchFn","formElementProperty","_a","_b","o","m","r","ar","error","__read","name","setProperty","specialCharactersForRemove","replace","_regExpForRemove","maskSymbol","test","map","item","join","Injectable","Inject","args","DOCUMENT","ElementRef","Renderer2","_maskService","MaskDirective","_maskValue","_inputValue","onInput","el","caretShift","selectionStart","selectionEnd","inputType","onBlur","onTouch","writeValue","generator","P","_arguments","Promise","resolve","reject","fulfilled","rejected","then","apply","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","Directive","selector","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","Input","HostListener","NgxMaskModule","forRoot","configValue","ngModule","useValue","useFactory","_configFactory","deps","NgModule","exports","declarations","initConfig"],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport interface IConfig {\n  clearIfNotMatch: boolean;\n  dropSpecialCharacters: boolean | string[];\n  specialCharacters: string[];\n  patterns: {\n    [character: string]: {\n      pattern: RegExp,\n      optional?: boolean\n    }\n  };\n}\n\nexport type optionsConfig = {\n  [P in keyof IConfig]?: IConfig[P]\n};\n\nexport const config: InjectionToken<string> = new InjectionToken('config');\nexport const NEW_CONFIG: InjectionToken<string> = new InjectionToken('NEW_CONFIG');\nexport const INITIAL_CONFIG: InjectionToken<IConfig> = new InjectionToken('INITIAL_CONFIG');\n\nexport const initialConfig: IConfig = {\n  clearIfNotMatch: false,\n  dropSpecialCharacters: true,\n  specialCharacters: ['/', '(', ')', '.', ':', '-', ' ', '+', ',', '@'],\n  patterns: {\n    '0': {\n      pattern: new RegExp('\\\\d'),\n    },\n    '9': {\n      pattern: new RegExp('\\\\d'),\n      optional: true\n    },\n    'A': {\n      pattern: new RegExp('\\[a-zA-Z0-9\\]')\n    },\n    'S': {\n      pattern: new RegExp('\\[a-zA-Z\\]')\n    }\n  }\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { ElementRef, Inject, Injectable, Renderer2 } from '@angular/core';\nimport { config, IConfig } from './config';\nimport { DOCUMENT } from '@angular/common';\n\n@Injectable()\nexport class MaskService {\n\n  public dropSpecialCharacters: IConfig['dropSpecialCharacters'];\n  public clearIfNotMatch: IConfig['clearIfNotMatch'];\n  public maskExpression: string = '';\n  public maskSpecialCharacters: IConfig['specialCharacters'];\n  public maskAvailablePatterns: IConfig['patterns'];\n\n  private _shift: Set<number>;\n  private _formElement: HTMLInputElement;\n\n  // tslint:disable-next-line\n  public onChange = (_: any) => { };\n\n  public onTouch = () => { };\n\n  public constructor(\n    // tslint:disable-next-line\n    @Inject(DOCUMENT) private document: any,\n    @Inject(config) private _config: IConfig,\n    private _elementRef: ElementRef,\n    private _renderer: Renderer2,\n  ) {\n    this._shift = new Set();\n    this.clearIfNotMatch = this._config.clearIfNotMatch;\n    this.dropSpecialCharacters = this._config.dropSpecialCharacters;\n    this.maskSpecialCharacters = this._config!.specialCharacters;\n    this.maskAvailablePatterns = this._config.patterns;\n\n    this._formElement = this._elementRef.nativeElement;\n  }\n\n  public applyMask(inputValue: string, maskExpression: string, position: number = 0, cb: Function = () => { }): string {\n    if (inputValue === undefined || inputValue === null || maskExpression === undefined) {\n      return '';\n    }\n\n    let cursor: number = 0;\n    let result: string = '';\n\n    const inputArray: string[] = inputValue.toString()\n      .split('');\n\n    let multi: boolean = false;\n    // tslint:disable-next-line\n    for (let i: number = 0, inputSymbol: string = inputArray[0]; i\n    < inputArray.length; i++ , inputSymbol = inputArray[i]) {\n      if (cursor === maskExpression.length) {\n        break;\n      }\n\n      if (this._checkSymbolMask(inputSymbol, maskExpression[cursor]) && maskExpression[cursor + 1] === '?') {\n        result += inputSymbol;\n        cursor += 2;\n      } else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor]) && maskExpression[cursor + 1] === '*') {\n        result += inputSymbol;\n        multi = true;\n      } else if (maskExpression[cursor + 1] === '*' && multi && this._checkSymbolMask(\n        inputSymbol,\n        maskExpression[cursor + 2]\n      )) {\n        result += inputSymbol;\n        cursor += 3;\n        multi = false;\n      } else if (maskExpression[cursor + 1] === '?' && this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2])) {\n        result += inputSymbol;\n        cursor += 3;\n      } else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor])) {\n        result += inputSymbol;\n        cursor++;\n      } else if (this.maskSpecialCharacters.indexOf(maskExpression[cursor]) !== -1) {\n        result += maskExpression[cursor];\n        cursor++;\n        this._shift.add(inputArray.length);\n        i--;\n      } else if (this.maskSpecialCharacters.indexOf(inputSymbol) > -1\n        && this.maskAvailablePatterns[maskExpression[cursor]]\n        && this.maskAvailablePatterns[maskExpression[cursor]].optional) {\n        cursor++;\n        i--;\n      }\n    }\n    if (result.length + 1 === maskExpression.length\n      && this.maskSpecialCharacters.indexOf(maskExpression[maskExpression.length - 1]) !== -1) {\n      result += maskExpression[maskExpression.length - 1];\n    }\n\n    let shift: number = 1;\n    let newPosition: number = position + 1;\n    while (this._shift.has(newPosition)) {\n      shift++;\n      newPosition++;\n    }\n    cb(this._shift.has(position) ? shift : 0);\n\n\n    Array.isArray(this.dropSpecialCharacters)\n      ? this.onChange(this._removeMask(result, this.dropSpecialCharacters))\n      : this.dropSpecialCharacters === true\n      ? this.onChange(this._removeMask(result, this.maskSpecialCharacters))\n      : this.onChange(result);\n\n    return result;\n  }\n\n  public applyValueChanges(position: number = 0, cb: Function = () => { }): void {\n    const maskedInput: string = this.applyMask(this._formElement.value, this.maskExpression, position, cb);\n\n    this._formElement.value = maskedInput;\n\n    if (this._formElement === this.document.activeElement) {\n      return;\n    }\n    this.clearIfNotMatchFn();\n  }\n\n  public clearIfNotMatchFn(): void {\n    if (\n      this.clearIfNotMatch === true && this.maskExpression.length\n      !== this._formElement.value.length) {\n      this.formElementProperty = ['value', ''];\n    }\n  }\n\n  public set formElementProperty([name, value]: [string, string | boolean]) {\n    this._renderer.setProperty(this._formElement, name, value);\n  }\n\n  private _removeMask(value: string, specialCharactersForRemove: string[]): string {\n    return value\n      ? value.replace(this._regExpForRemove(specialCharactersForRemove), '')\n      : value;\n  }\n\n  private _checkSymbolMask(inputSymbol: string, maskSymbol: string): boolean {\n    return inputSymbol\n      === maskSymbol\n      || this.maskAvailablePatterns[maskSymbol] && this.maskAvailablePatterns[maskSymbol].pattern\n      && this.maskAvailablePatterns[maskSymbol].pattern.test(inputSymbol);\n  }\n\n\n  private _regExpForRemove(specialCharactersForRemove: string []): RegExp {\n    return new RegExp(specialCharactersForRemove\n      .map((item: string) => `\\\\${item}`)\n      .join('|'), 'gi');\n  }\n\n}\n","import { Directive, forwardRef, HostListener, Inject, Input } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MaskService } from './mask.service';\nimport { IConfig } from './config';\n\n@Directive({\n  selector: '[mask]',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MaskDirective),\n      multi: true\n    },\n    MaskService\n  ],\n})\nexport class MaskDirective implements ControlValueAccessor {\n\n  private _maskValue: string;\n  private _inputValue: string;\n\n  // tslint:disable-next-line\n  public onChange = (_: any) => { };\n\n  public onTouch = () => { };\n\n  public constructor(\n    // tslint:disable-next-line\n    @Inject(DOCUMENT) private document: any,\n    private _maskService: MaskService,\n  ) { }\n\n  @Input('mask')\n  public set maskExpression(value: string) {\n    this._maskValue = value || '';\n    if (!this._maskValue) {\n      return;\n    }\n    this._maskService.maskExpression = this._maskValue;\n    this._maskService.formElementProperty = [\n      'value',\n      this._maskService.applyMask(this._inputValue, this._maskService.maskExpression)\n    ];\n\n  }\n\n  @Input()\n  public set specialCharacters(value: IConfig['specialCharacters']) {\n    if (!value || !Array.isArray(value) || Array.isArray(value) && !value.length) {\n      return;\n    }\n    this._maskService.maskSpecialCharacters = value;\n  }\n\n  @Input()\n  public set patterns(value: IConfig['patterns']) {\n    if (!value) {\n      return;\n    }\n    this._maskService.maskAvailablePatterns = value;\n  }\n\n  @Input()\n  public set dropSpecialCharacters(value: IConfig['dropSpecialCharacters']) {\n    this._maskService.dropSpecialCharacters = value;\n  }\n\n  @Input()\n  public set clearIfNotMatch(value: IConfig['clearIfNotMatch']) {\n    this._maskService.clearIfNotMatch = value;\n  }\n\n  @HostListener('input', ['$event'])\n  public onInput(e: KeyboardEvent): void {\n    const el: HTMLInputElement = (e.target as HTMLInputElement);\n    this._inputValue = el.value;\n    if (!this._maskValue) {\n      this.onChange(el.value);\n      return;\n    }\n\n    const position: number = el.selectionStart as number;\n    let caretShift: number = 0;\n\n    this._maskService.applyValueChanges(\n      position,\n      (shift: number) => caretShift = shift\n    );\n\n    // only set the selection if the element is active\n    if (this.document.activeElement !== el) {\n      return;\n    }\n    el.selectionStart = el.selectionEnd = position + (\n      // tslint:disable-next-line\n      (e as any).inputType === 'deleteContentBackward'\n        ? 0\n        : caretShift\n    );\n  }\n\n  @HostListener('blur')\n  public onBlur(): void {\n    this._maskService.clearIfNotMatchFn();\n    this.onTouch();\n  }\n\n\n  /** It writes the value in the input */\n  public async writeValue(inputValue: string): Promise<void> {\n    if (inputValue === undefined || inputValue === null) {\n      return;\n    }\n    inputValue && this._maskService.maskExpression\n      ? this._maskService.formElementProperty = [\n        'value',\n        this._maskService.applyMask(inputValue, this._maskService.maskExpression)\n      ]\n      : this._maskService.formElementProperty = ['value', inputValue];\n    this._inputValue = inputValue;\n  }\n\n  // tslint:disable-next-line\n  public registerOnChange(fn: any): void {\n    this.onChange = fn;\n    this._maskService.onChange = this.onChange;\n  }\n\n  // tslint:disable-next-line\n  public registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  /** It disables the input element */\n  public setDisabledState(isDisabled: boolean): void {\n    this._maskService.formElementProperty = ['disabled', isDisabled];\n  }\n\n\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { MaskDirective } from './mask.directive';\n\nimport { config, INITIAL_CONFIG, initialConfig, NEW_CONFIG, optionsConfig } from './config';\n\n@NgModule({\n  exports: [MaskDirective],\n  declarations: [MaskDirective]\n})\nexport class NgxMaskModule {\n\n  public static forRoot(configValue?: optionsConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxMaskModule,\n      providers: [\n        {\n          provide: NEW_CONFIG,\n          useValue: configValue\n        },\n        {\n          provide: INITIAL_CONFIG,\n          useValue: initialConfig\n        },\n        {\n          provide: config,\n          useFactory: _configFactory,\n          deps: [INITIAL_CONFIG, NEW_CONFIG]\n        },\n      ]\n    };\n  }\n}\n\n/**\n * @internal\n */\nexport function _configFactory\n(initConfig: optionsConfig, configValue: optionsConfig | (() => optionsConfig)): Function | optionsConfig {\n  return (typeof configValue === 'function') ? configValue() : { ...initConfig, ...configValue };\n}\n"]}